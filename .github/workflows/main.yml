name: CI Pipeline

on:
  push:
  create:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install env
        uses: ./.github/actions/install-python-env

      - name: Black
        run: |
          source .venv/bin/activate
          black datek_async_fsm/ tests/ --check

      - name: Tests
        run: |
          source .venv/bin/activate
          pytest tests

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  CD:
    if: github.event.create
    needs: [CI]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load version into env
        run: |
          [[ $GITHUB_REF =~ refs/tags/(.*) ]]
          version="${BASH_REMATCH[1]}"
          [ -z "${version}" ] && exit 1
          echo "RELEASE_VERSION=${version}" >> $GITHUB_ENV

      - name: Install env
        uses: ./.github/actions/install-python-env

      - name: Build and publish
        run: |
          source .venv/bin/activate
          poetry version ${RELEASE_VERSION}
          poetry build
          poetry publish -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}
